plugins {
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id 'com.epages.restdocs-api-spec' version '0.16.0'
    id 'java'
    id 'jacoco'
    id 'com.google.cloud.tools.jib' version '3.2.1' //jib
}

ext {
    applicationVersion = "0.5.0"
    repo = System.getenv("REPO")
    set('snippetsDir', file("build/generated-snippets"))
}

jacoco {
    toolVersion = '0.8.5'
}

jacocoTestReport {
    reports {
        html.enabled true
        xml.enabled true
        csv.enabled true
    }
}

jib {
    from {
        image = 'openjdk:11-jre-slim'
        platforms {
            platform {
                architecture = 'amd64'
                os = 'linux'
            }
            platform {
                architecture = 'arm64'
                os = 'linux'
            }
        }
    }
    to {
        image = 'ghcr.io/' + "${rootProject.ext.repo}" + '/api-server'
        tags = ["latest", "${rootProject.ext.applicationVersion}"]
    }
    container {
        mainClass = "io.so1s.backend.BackendApplication"
        creationTime = 'USE_CURRENT_TIMESTAMP'
        ports = ['8080']
        jvmFlags = ['-Dspring.profiles.active=dev', '-Dserver.port=8080', '-XX:+UseContainerSupport'
                    , '-Dfile.encoding=UTF-8']
    }
}

group = 'io.so1s'
version = "${rootProject.ext.applicationVersion}" + '-SNAPSHOT' + new Date().format("yyyyMMddHHmmss")
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
//    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"


    // Json Logging Configuration
    implementation 'ch.qos.logback.contrib:logback-json-classic:0.1.5'
    implementation 'ch.qos.logback.contrib:logback-jackson:0.1.5'
    implementation 'ch.qos.logback:logback-classic'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    implementation 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    implementation 'org.postgresql:postgresql:42.4.0'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    implementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.16.2'

    // https://mvnrepository.com/artifact/javax.validation/validation-api
    implementation 'javax.validation:validation-api:2.0.1.Final'

    // Jackson
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.2'

    // Querydsl
    implementation 'com.querydsl:querydsl-jpa'
    implementation 'com.querydsl:querydsl-core'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    // java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 대응
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"

    // https://mvnrepository.com/artifact/io.fabric8/kubernetes-client
    implementation 'io.fabric8:kubernetes-client:5.12.2'
    implementation 'io.fabric8:kubernetes-test:5.12.2'
    implementation 'io.fabric8:kubernetes-server-mock:5.12.2'
    implementation 'io.fabric8:istio-client:5.12.2'

    implementation 'io.fabric8:istio-server-mock:5.12.2'
    testImplementation 'io.rest-assured:rest-assured:4.4.0'

    // https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-iam
    implementation 'com.amazonaws:aws-java-sdk-iam:1.12.253'

    // https://mvnrepository.com/artifact/com.google.code.findbugs/jsr305
    implementation 'com.google.code.findbugs:jsr305:3.0.2'


    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    implementation 'com.aventrix.jnanoid:jnanoid:2.0.0'

    // https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter
    testImplementation 'org.mockito:mockito-junit-jupiter:4.6.1'

    // aws
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    testImplementation 'io.findify:s3mock_2.12:0.2.4'

    // metrics
    implementation 'org.springframework.boot:spring-boot-starter-actuator:2.7.3'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.9.3'

    // sleuth & zipkin
//    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth:3.1.4'
//    implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin:3.1.4'

}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}

// clean task 실행시 QClass 삭제
tasks.clean {
    // IntelliJ Annotation processor 생성물 생성 위치
    delete file('src/main/generated')
}


// ./gradlew openapi3
// See /src/main/resources/static/docs/openapi3.json
openapi3 {
    servers = [{ url = 'http://localhost:8080' }, { url = 'https://www.so1s.io' }]
    title = 'So1s'
    description = 'MLOps Inference Deployment Management Framework'
    version = '0.1.0'
    format = 'json'
    outputDirectory = 'src/main/resources/static/docs'
}
