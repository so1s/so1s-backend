name: CD
on:
  push:
    branches:
      - main

env:
  jwt-secret: ${{ secrets.JWT_SECRET }}
  aws-s3-access-key: ${{ secrets.AWS_S3_ACCESS_KEY }}
  aws-s3-secret-key: ${{ secrets.AWS_S3_SECRET_KEY }}
  aws-s3-bucket: ${{ secrets.AWS_S3_BUCKET }}
  aws-region: ${{ secrets.AWS_REGION }}
  aws-aurora-endpoint: ${{ secrets.AWS_AURORA_ENDPOINT }}
  aws-aurora-username: ${{ secrets.AWS_AURORA_USERNAME }}
  aws-aurora-password: ${{ secrets.AWS_AURORA_PASSWORD }}

jobs:
  image-build-and-push:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.REPO }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Install dependencies
        run: |
          sudo apt update -y && sudo apt install zip unzip -y
          curl -s "https://get.sdkman.io" | bash
          source ~/.sdkman/bin/sdkman-init.sh
          sdk selfupdate
          touch ~/.bashrc
          source ~/.bashrc
          sdk install java 17.0.5-amzn
          sdk install gradle 7.4.2
          sdk use java 17.0.5-amzn
          sdk use gradle 7.4.2
          gradle wrapper
          sudo chmod +x gradlew
        env:
          sdkman_selfupdate_enable: false
      - name: Run test
        run: ./gradlew test --args='--spring.profiles.active=test'
        env:
          JAVA_HOME: /home/runner/.sdkman/candidates/java/17.0.5-amzn
      - name: Build with Gradle
        run: ./gradlew clean jib -x test -Djib.to.tags=latest
        env:
          REPO: ${{ secrets.REPO }}
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
          JAVA_HOME: /home/runner/.sdkman/candidates/java/17.0.5-amzn
